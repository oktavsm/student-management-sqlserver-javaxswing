/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package basdatbab13.CRUDFolder.MataKuliah;

import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.*;
import javax.swing.table.*;
import java.sql.*;
import basdatbab13.ComboItem;
import java.awt.*;
import java.awt.event.*;


/**
 *
 * @author Hype GLK
 */
public class CourseCRUD extends javax.swing.JPanel {

    /**
     * Creates new form CourseCRUD
     */
    private Connection conn;

    public CourseCRUD(Connection conn) {
        this.conn=conn;
        initComponents();
        cl = (CardLayout) crudPanel.getLayout();
        setInsert();
        loadTable();    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        crudPanel = new javax.swing.JPanel();
        insertPanel = new javax.swing.JPanel();
        insertCourseCode = new javax.swing.JTextField();
        insertCourseName = new javax.swing.JTextField();
        insertButton = new javax.swing.JButton();
        updatePanel = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        courseComboBox = new javax.swing.JComboBox<ComboItem>();
        courseNameField = new javax.swing.JTextField();
        removePanel = new javax.swing.JPanel();
        removeCourseButton = new javax.swing.JButton();
        courseComboBox1 = new javax.swing.JComboBox<ComboItem>();
        courseNameField1 = new javax.swing.JTextField();
        toUpdatePanelButton = new javax.swing.JButton();
        toInsertPanelButton = new javax.swing.JButton();
        toRemovePanelButton = new javax.swing.JButton();
        scrollPanel = new javax.swing.JScrollPane();
        courseTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(625, 600));
        setMinimumSize(new java.awt.Dimension(625, 600));
        setPreferredSize(new java.awt.Dimension(625, 600));

        crudPanel.setPreferredSize(new java.awt.Dimension(607, 66));
        crudPanel.setLayout(new java.awt.CardLayout());

        insertPanel.setBackground(new java.awt.Color(51, 51, 51));

        insertCourseCode.setText("Kode Mata Kuliah");
        insertCourseCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertCourseCodeActionPerformed(evt);
            }
        });

        insertCourseName.setText("Nama Mata Kuliah");

        insertButton.setText("Insert Course");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String code = insertCourseCode.getText();
                String name = insertCourseName.getText();
                if (!code.isEmpty() && !name.isEmpty()) {
                    insert(code, name);
                    insertCourseCode.setText("");
                    insertCourseName.setText("");
                } else {
                    JOptionPane.showMessageDialog(insertPanel, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        javax.swing.GroupLayout insertPanelLayout = new javax.swing.GroupLayout(insertPanel);
        insertPanel.setLayout(insertPanelLayout);
        insertPanelLayout.setHorizontalGroup(
            insertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertPanelLayout.createSequentialGroup()
                .addComponent(insertCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertCourseName, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
            .addComponent(insertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        insertPanelLayout.setVerticalGroup(
            insertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertPanelLayout.createSequentialGroup()
                .addGroup(insertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        crudPanel.add(insertPanel, "insertCard");

        updatePanel.setBackground(new java.awt.Color(51, 51, 51));
        updatePanel.setPreferredSize(new java.awt.Dimension(607, 66));

        updateButton.setText("Update Course");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboItem selectedItem = (ComboItem) courseComboBox.getSelectedItem();
                if (selectedItem != null) {
                    String code = selectedItem.getKey();
                    String name = courseNameField.getText();
                    if (!name.isEmpty()) {
                        update(code, name);
                        courseNameField.setText("");
                    } else {
                        JOptionPane.showMessageDialog(updatePanel, "Please enter a course name", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(updatePanel, "Please select a course to update", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        modelCombo = new DefaultComboBoxModel<>();
        courseComboBox.setModel(modelCombo);
        courseComboBox.setPreferredSize(new java.awt.Dimension(72, 30));
        courseComboBox.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                if (evt.getStateChange() == ItemEvent.SELECTED) {
                    ComboItem selectedItem = (ComboItem) courseComboBox.getSelectedItem();
                    if (selectedItem != null) {
                        courseNameField.setText(selectedItem.getValue());
                    }
                }
                
            }
        });

        javax.swing.GroupLayout updatePanelLayout = new javax.swing.GroupLayout(updatePanel);
        updatePanel.setLayout(updatePanelLayout);
        updatePanelLayout.setHorizontalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courseNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
            .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        updatePanelLayout.setVerticalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        crudPanel.add(updatePanel, "updateCard");

        removePanel.setBackground(new java.awt.Color(51, 51, 51));
        removePanel.setPreferredSize(new java.awt.Dimension(607, 66));
        //course name field1 uneditable
        courseNameField1.setEditable(false);

        removeCourseButton.setText("Remove Course");
        removeCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboItem selectedItem = (ComboItem) courseComboBox1.getSelectedItem();
                if (selectedItem != null) {
                    String code = selectedItem.getKey();
                    remove(code);
                    courseNameField1.setText("");
                    loadTable(); // Refresh the table after deletion
                } else {
                    JOptionPane.showMessageDialog(removePanel, "Please select a course to remove", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        courseComboBox1.setModel(modelCombo);
        courseComboBox1.setPreferredSize(new java.awt.Dimension(72, 30));
        courseComboBox1.addItemListener(new ItemListener() {
            public void itemStateChanged(ItemEvent evt) {
                if (evt.getStateChange() == ItemEvent.SELECTED) {
                    ComboItem selectedItem = (ComboItem) courseComboBox1.getSelectedItem();
                    if (selectedItem != null) {
                        courseNameField1.setText(selectedItem.getValue());
                    }
                }
            }
        });

        javax.swing.GroupLayout removePanelLayout = new javax.swing.GroupLayout(removePanel);
        removePanel.setLayout(removePanelLayout);
        removePanelLayout.setHorizontalGroup(
            removePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removePanelLayout.createSequentialGroup()
                .addComponent(courseComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courseNameField1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE))
            .addComponent(removeCourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        removePanelLayout.setVerticalGroup(
            removePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removePanelLayout.createSequentialGroup()
                .addGroup(removePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseNameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        crudPanel.add(removePanel, "removeCard");

        toUpdatePanelButton.setText("Update Data");
        toUpdatePanelButton.setPreferredSize(new java.awt.Dimension(180, 30));
        toUpdatePanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toUpdatePanelButtonActionPerformed(evt);
            }
        });

        toInsertPanelButton.setBackground(new java.awt.Color(51, 51, 51));
        toInsertPanelButton.setText("Insert Data");
        toInsertPanelButton.setPreferredSize(new java.awt.Dimension(180, 30));
        toInsertPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toInsertPanelButtonActionPerformed(evt);
            }
        });

        toRemovePanelButton.setText("Remove Data");
        toRemovePanelButton.setPreferredSize(new java.awt.Dimension(180, 30));
        toRemovePanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toRemovePanelButtonActionPerformed(evt);
            }
        });

        courseTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        model = new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Kode MK", "Nama"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
        courseTable.setModel(model);
        courseTable.setEnabled(false);
        courseTable.setGridColor(new java.awt.Color(153, 153, 153));
        courseTable.setPreferredSize(new java.awt.Dimension(150, 607));
        courseTable.setSelectionForeground(new java.awt.Color(153, 153, 153));
        courseTable.setShowGrid(true);
        scrollPanel.setViewportView(courseTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(crudPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(toInsertPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(toUpdatePanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(toRemovePanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPanel))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toInsertPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toUpdatePanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toRemovePanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crudPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void insertCourseCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertCourseCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertCourseCodeActionPerformed

    private void toInsertPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toInsertPanelButtonActionPerformed
        // TODO add your handling code here:
        setInsert();
    }//GEN-LAST:event_toInsertPanelButtonActionPerformed

    private void toUpdatePanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toUpdatePanelButtonActionPerformed
        // TODO add your handling code here:
        setUpdate();
    }//GEN-LAST:event_toUpdatePanelButtonActionPerformed

    private void toRemovePanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toRemovePanelButtonActionPerformed
        // TODO add your handling code here:
        setRemove();
    }//GEN-LAST:event_toRemovePanelButtonActionPerformed
    
    void setInsert(){
       toInsertPanelButton.setBackground(new Color(51,51,51));
       if(previousButton!=null)
       previousButton.setBackground(new Color(78,80,82));
       cl.show(crudPanel, "insertCard");
       previousButton=toInsertPanelButton;
       revalidate();
       repaint();
    }
    void setUpdate(){
       toUpdatePanelButton.setBackground(new Color(51,51,51));
       if(previousButton!=null)
       previousButton.setBackground(new Color(78,80,82));
       cl.show(crudPanel, "updateCard");
       previousButton=toUpdatePanelButton;
       revalidate();
       repaint();
    }
    
    void setRemove(){
        toRemovePanelButton.setBackground(new Color(51,51,51));
       if(previousButton!=null)
        previousButton.setBackground(new Color(78,80,82));
       cl.show(crudPanel, "removeCard");
       previousButton=toRemovePanelButton;
       revalidate();
       repaint();
    }

    void loadTable(){
        model.setRowCount(0); // Clear existing rows
        try {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT kode_mk, nama_mk FROM matakuliah");
            model.setRowCount(0); // Clear existing rows
            modelCombo.removeAllElements(); // Clear existing items in the combo box model
            while (rs.next()) {
                String kodeMk = rs.getString("kode_mk");
                String namaMk = rs.getString("nama_mk");
                model.addRow(new Object[]{kodeMk, namaMk});
                modelCombo.addElement(new ComboItem(kodeMk, namaMk));
            }
        } catch (SQLException e) {
            e.printStackTrace();
    }
    }
    
    void insert(String code,String name){
        try{
            Statement stmt = conn.createStatement();
            String sql = "INSERT INTO matakuliah (kode_mk, nama_mk) VALUES ('" + code + "', '" + name + "')";
            stmt.executeUpdate(sql);
            loadTable(); // Refresh the table after insertion
        } catch (Exception e){

        }
    }

    void update(String code, String name){
        try {
            
            String sql = "UPDATE matakuliah SET nama_mk = ? WHERE kode_mk = ?";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, name);
            pstmt.setString(2, code);
            pstmt.executeUpdate();
            loadTable(); // Refresh the table after update
        } catch (SQLException e) {
            e.printStackTrace();
    }
        }
    
    void remove(String code){
        try {
            Statement stmt = conn.createStatement();
            String sql = "DELETE FROM matakuliah WHERE kode_mk = '" + code + "'";
            stmt.executeUpdate(sql);
            loadTable(); // Refresh the table after deletion
        } catch (SQLException e) {
            e.printStackTrace();
    }
    }
    private javax.swing.JButton previousButton; 
    private CardLayout cl;
    private DefaultTableModel model;
    private DefaultComboBoxModel<ComboItem> modelCombo;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<ComboItem> courseComboBox;
    private javax.swing.JComboBox<ComboItem> courseComboBox1;
    private javax.swing.JTextField courseNameField;
    private javax.swing.JTextField courseNameField1;
    private javax.swing.JTable courseTable;
    private javax.swing.JPanel crudPanel;
    private javax.swing.JButton insertButton;
    private javax.swing.JTextField insertCourseCode;
    private javax.swing.JTextField insertCourseName;
    private javax.swing.JPanel insertPanel;
    private javax.swing.JButton removeCourseButton;
    private javax.swing.JPanel removePanel;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JButton toInsertPanelButton;
    private javax.swing.JButton toRemovePanelButton;
    private javax.swing.JButton toUpdatePanelButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JPanel updatePanel;
    // End of variables declaration//GEN-END:variables
}
